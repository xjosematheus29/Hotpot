var ImageResizerClass=(function(){let imageType={png:0,jpg:1,svg:2,gif:3};let requestType={png:0,jpg:1,gif:2,svg:3,iosIcon:4,iosImage:5,androidIcon:6,androidImage:8,chromeIcon:9,windowsIcon:10,firefoxIcon:11,macOsIcon:12,favicon:13};function createCustomRequestList(requestList,fileStem,imageType){let list=[];for(const request of requestList){let filename=fileStem+"-"+request.width+"x"+request.height;let resizeRequest=createResizeRequest("/Custom",filename,ImageResizerClass.imageType.png,request.width,request.height,1);list.push(resizeRequest);}
list=[].concat.apply([],list);return list;}
function createRequestList(requestTypeList,fileStem,imageType,naturalWidth,naturalHeight){let list=[];$.each(requestTypeList,function(){let curType=parseInt(this);let req=null;switch(curType){case requestType.png:req=createResizeRequest("/",fileStem,ImageResizerClass.imageType.png,naturalWidth,naturalHeight,1);break;case requestType.jpg:req=createResizeRequest("/",fileStem,ImageResizerClass.imageType.jpg,naturalWidth,naturalHeight,1);break;case requestType.iosIcon:req=createIOSIconRequests(fileStem,imageType);break;case requestType.iosImage:req=createIOSImageRequests(fileStem,imageType,naturalWidth,naturalHeight);break;case requestType.androidIcon:req=createAndroidIconRequests(fileStem,imageType);break;case requestType.androidImage:req=createAndroidImageRequests(fileStem,imageType,naturalWidth,naturalHeight);break;case requestType.chromeIcon:req=createChromeRequests(fileStem,imageType);break;case requestType.windowsIcon:req=createWindowsRequests(fileStem,imageType);break;case requestType.firefoxIcon:req=createFirefoxRequests(fileStem,imageType);break;case requestType.macOsIcon:req=createMacOSRequests(fileStem,imageType);break;case requestType.favicon:req=createFaviconRequests(fileStem,imageType);break;default:debug("Error processing request: unknown type. Type: "+curType);break;}
if(req){list.push(req);}});list=[].concat.apply([],list);return list;}
function resize(image,requestList,folderName){let promise=$.Deferred();let resizePromises=getResizePromises(image,requestList);$.when(...resizePromises).then((...imageList)=>{downloadImages(imageList,folderName).then(()=>promise.resolve()).catch(function(e){debugError(e);promise.reject();});});return promise;}
function getResizePromises(image,requestList){let resizePromises=requestList.map(function(request){return getCanvasResizePromise(image,request.filepath,request.newWidth,request.newHeight);});return resizePromises;}
function getCanvasResizePromise(image,filepath,canvasWidth,canvasHeight){let promise=$.Deferred();let canvas=$(document.createElement('canvas'));let context=canvas[0].getContext('2d');canvas[0].width=canvasWidth;canvas[0].height=canvasHeight;const imageWidth=image.naturalWidth;const imageHeight=image.naturalHeight;const scale=Math.min(canvasWidth/imageWidth,canvasHeight/imageHeight);const scaledWidth=imageWidth*scale;const scaledHeight=imageHeight*scale;context.drawImage(image,(canvasWidth-scaledWidth)/2,(canvasHeight-scaledHeight)/2,scaledWidth,scaledHeight);let blobType='image/png';if(filepath.endsWith('jpg')){blobType='image/jpeg';}else if(filepath.endsWith('gif')){blobType='image/gif';}
canvas[0].toBlob(function(blob){promise.resolve({filepath:filepath,image:blob});},blobType);return promise;}
function downloadImages(imageList,folderName){let promise=$.Deferred();let folderExt='zip';let folderBase='Hotpot Design';if(folderName){folderBase=folderBase+" - "+folderName;}
let zipFolderName=folderBase+"."+folderExt;let zip=new JSZip();imageList.forEach(function(image){zip.file(image.filepath,image.image,{base64:true});});zip.generateAsync({type:'blob',createFolders:true}).then(function(content){saveAs(content,zipFolderName);promise.resolve();}).catch(function(e){debugError(e);promise.reject();});return promise;}
function createFaviconRequests(fileStem,imageType){let dirPath="Favicons";let list=[createResizeRequest(dirPath,"favicon-16x16",imageType,16,16),createResizeRequest(dirPath,"favicon-24x24",imageType,24,24),createResizeRequest(dirPath,"favicon-32x32",imageType,32,32),createResizeRequest(dirPath,"favicon-48x48",imageType,48,48),createResizeRequest(dirPath,"favicon-57x57",imageType,57,57),createResizeRequest(dirPath,"favicon-60x60",imageType,60,60),createResizeRequest(dirPath,"favicon-64x64",imageType,64,64),createResizeRequest(dirPath,"favicon-70x70",imageType,70,70),createResizeRequest(dirPath,"favicon-72x72",imageType,72,72),createResizeRequest(dirPath,"favicon-76x76",imageType,76,76),createResizeRequest(dirPath,"favicon-96x96",imageType,96,96),createResizeRequest(dirPath,"favicon-114x114",imageType,114,114),createResizeRequest(dirPath,"favicon-120x120",imageType,120,120),createResizeRequest(dirPath,"favicon-128x128",imageType,128,128),createResizeRequest(dirPath,"favicon-144x144",imageType,144,144),createResizeRequest(dirPath,"favicon-150x150",imageType,150,150),createResizeRequest(dirPath,"favicon-152x152",imageType,152,152),createResizeRequest(dirPath,"favicon-180x180",imageType,180,180),createResizeRequest(dirPath,"favicon-192x192",imageType,192,192),createResizeRequest(dirPath,"favicon-196x196",imageType,196,196),createResizeRequest(dirPath,"favicon-310x310",imageType,310,310),];return list;}
function createMacOSRequests(fileStem,imageType){let dirPath="MacOS.appiconset";let list=[createResizeRequest(dirPath,"icon-16x16",imageType,16,16),createResizeRequest(dirPath,"icon-32x32",imageType,32,32),createResizeRequest(dirPath,"icon-64x64",imageType,64,64),createResizeRequest(dirPath,"icon-128x128",imageType,128,128),createResizeRequest(dirPath,"icon-256x256",imageType,256,256),createResizeRequest(dirPath,"icon-512x512",imageType,512,512),];return list;}
function createIOSIconRequests(fileStem,imageType){let dirPath="AppIcon.appiconset";let list=[createResizeRequest(dirPath,"Icon-20",imageType,20,20),createResizeRequest(dirPath,"Icon-20@2x",imageType,40,40),createResizeRequest(dirPath,"Icon-20@3x",imageType,60,60),createResizeRequest(dirPath,"Icon-29",imageType,29,29),createResizeRequest(dirPath,"Icon-29@2x",imageType,58,58),createResizeRequest(dirPath,"Icon-29@3x",imageType,87,87),createResizeRequest(dirPath,"Icon-40",imageType,40,40),createResizeRequest(dirPath,"Icon-40@2x",imageType,80,80),createResizeRequest(dirPath,"Icon-40@3x",imageType,120,120),createResizeRequest(dirPath,"Icon-50",imageType,50,50),createResizeRequest(dirPath,"Icon-50@2x",imageType,100,100),createResizeRequest(dirPath,"Icon-57",imageType,57,57),createResizeRequest(dirPath,"Icon-57@2x",imageType,114,114),createResizeRequest(dirPath,"Icon-60@2x",imageType,120,120),createResizeRequest(dirPath,"Icon-60@3x",imageType,180,180),createResizeRequest(dirPath,"Icon-72",imageType,72,72),createResizeRequest(dirPath,"Icon-72@2x",imageType,144,144),createResizeRequest(dirPath,"Icon-76",imageType,76,76),createResizeRequest(dirPath,"Icon-76@2x",imageType,152,152),createResizeRequest(dirPath,"Icon-83.5@2x",imageType,167,167),createResizeRequest(dirPath,"iTunesArtwork-1024",imageType,1024,1024),];list=list.concat([createResizeRequest(dirPath,"AppleWatch-Icon-24@2x",imageType,48,48),createResizeRequest(dirPath,"AppleWatch-Icon-27.5@2x",imageType,55,55),createResizeRequest(dirPath,"AppleWatch-Icon-29@2x",imageType,58,58),createResizeRequest(dirPath,"AppleWatch-Icon-29@3x",imageType,87,87),createResizeRequest(dirPath,"AppleWatch-Icon-40@2x",imageType,80,80),createResizeRequest(dirPath,"AppleWatch-Icon-44@2x",imageType,88,88),createResizeRequest(dirPath,"AppleWatch-Icon-86@2x",imageType,172,172),createResizeRequest(dirPath,"AppleWatch-Icon-98@2x",imageType,196,196),]);return list;}
function createIOSImageRequests(fileStem,imageType,naturalWidth,naturalHeight){let dirPath="iOS Image";let ratio=1/3;let baseWidth=naturalWidth*ratio;let baseHeight=naturalHeight*ratio;let list=[createResizeRequest(dirPath,fileStem+"@1x",imageType,baseWidth,baseHeight,1),createResizeRequest(dirPath,fileStem+"@2x",imageType,baseWidth,baseHeight,2),createResizeRequest(dirPath,fileStem+"@3x",imageType,baseWidth,baseHeight,3),];return list;}
function createWindowsRequests(fileStem,imageType){let dirPath="Windows";let list=[createResizeRequest(dirPath,"Square44x44Logo.targetsize-16",imageType,16,16),createResizeRequest(dirPath,"Square44x44Logo.targetsize-20",imageType,20,20),createResizeRequest(dirPath,"Square44x44Logo.targetsize-24",imageType,24,24),createResizeRequest(dirPath,"Square44x44Logo.targetsize-30",imageType,30,30),createResizeRequest(dirPath,"Square44x44Logo.targetsize-32",imageType,32,32),createResizeRequest(dirPath,"Square44x44Logo.targetsize-36",imageType,36,36),createResizeRequest(dirPath,"Square44x44Logo.targetsize-40",imageType,40,40),createResizeRequest(dirPath,"Square44x44Logo.targetsize-48",imageType,48,48),createResizeRequest(dirPath,"Square44x44Logo.targetsize-60",imageType,60,60),createResizeRequest(dirPath,"Square44x44Logo.targetsize-64",imageType,64,64),createResizeRequest(dirPath,"Square44x44Logo.targetsize-72",imageType,72,72),createResizeRequest(dirPath,"Square44x44Logo.targetsize-80",imageType,80,80),createResizeRequest(dirPath,"Square44x44Logo.targetsize-96",imageType,96,96),createResizeRequest(dirPath,"Square44x44Logo.targetsize-256",imageType,256,256),];list=list.concat([createResizeRequest(dirPath,"Square71x71Logo.scale-100",imageType,71,71),createResizeRequest(dirPath,"Square71x71Logo.scale-125",imageType,89,89),createResizeRequest(dirPath,"Square71x71Logo.scale-150",imageType,107,107),createResizeRequest(dirPath,"Square71x71Logo.scale-200",imageType,142,142),createResizeRequest(dirPath,"Square71x71Logo.scale-400",imageType,284,284),]);list=list.concat([createResizeRequest(dirPath,"Square150x150Logo.scale-100",imageType,150,150),createResizeRequest(dirPath,"Square150x150Logo.scale-125",imageType,188,188),createResizeRequest(dirPath,"Square150x150Logo.scale-150",imageType,225,225),createResizeRequest(dirPath,"Square150x150Logo.scale-200",imageType,300,300),createResizeRequest(dirPath,"Square150x150Logo.scale-400",imageType,600,600),]);list=list.concat([createResizeRequest(dirPath,"Square310x310Logo.scale-100",imageType,310,310),createResizeRequest(dirPath,"Square310x310Logo.scale-125",imageType,388,388),createResizeRequest(dirPath,"Square310x310Logo.scale-150",imageType,465,465),createResizeRequest(dirPath,"Square310x310Logo.scale-200",imageType,620,620),createResizeRequest(dirPath,"Square310x310Logo.scale-400",imageType,1240,1240),]);list=list.concat([createResizeRequest(dirPath,"StoreLogo.scale-71",imageType,71,71),createResizeRequest(dirPath,"StoreLogo.scale-150",imageType,150,150),createResizeRequest(dirPath,"StoreLogo.scale-300",imageType,300,300),]);return list;}
function createAndroidIconRequests(fileStem,imageType){let dirPath="Android Icons";let sizeList=[48,72,96,144,192,];return sizeListToSquareRequestList(dirPath,fileStem,imageType,sizeList);}
function createChromeRequests(fileStem,imageType){let dirPath="Chrome Store";let sizeList=[16,48,128,];return sizeListToSquareRequestList(dirPath,fileStem,imageType,sizeList);}
function createFirefoxRequests(fileStem,imageType){let dirPath="Firefox";let sizeList=[48,96,];return sizeListToSquareRequestList(dirPath,fileStem,imageType,sizeList);}
function createAndroidImageRequests(fileStem,imageType,naturalWidth,naturalHeight){let dirPath='Android Image';let ratio=1/4;let baseWidth=naturalWidth*ratio;let baseHeight=naturalHeight*ratio;let list=[createResizeRequest(dirPath,'ldpi',imageType,baseWidth,baseHeight,0.75),createResizeRequest(dirPath,'mdpi',imageType,baseWidth,baseHeight,1),createResizeRequest(dirPath,'hdpi',imageType,baseWidth,baseHeight,1.5),createResizeRequest(dirPath,'xhdpi',imageType,baseWidth,baseHeight,2),createResizeRequest(dirPath,'xxhdpi',imageType,baseWidth,baseHeight,3),createResizeRequest(dirPath,'xxxhdpi',imageType,baseWidth,baseHeight,4),];return list;}
function sizeListToSquareRequestList(dirPath,fileStem,imageType,sizeList){let list=[];sizeList.forEach(function(size){let fileStem=size+"x"+size;let req=createResizeRequest(dirPath,fileStem,imageType,size,size);list.push(req);});return list;}
function createResizeRequest(dirPath,fileStem,imageType,width,height,ratio){let targetWidth=width;let targetHeight=height;if(ratio){targetWidth=Math.round(targetWidth*ratio);targetHeight=Math.round(targetHeight*ratio);}
let fileExtension=null;if(imageType===ImageResizerClass.imageType.png){fileExtension="png";}else if(imageType===ImageResizerClass.imageType.jpg){fileExtension="jpg";}else if(imageType===ImageResizerClass.imageType.gif){fileExtension="gif";}
if(!fileExtension){console.log("Error resizing image: unknown output type. Output type: "+imageType);return;}
let filepath=dirPath+"/"+fileStem+"."+fileExtension;return{filepath:filepath,newWidth:targetWidth,newHeight:targetHeight}}
return{imageType:imageType,requestType:requestType,resize:resize,createRequestList:createRequestList,createCustomRequestList:createCustomRequestList};})();